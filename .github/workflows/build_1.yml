name: Build
on:
  push:
    branches: [ master ]
jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup tests
        run: echo "ok"

  push_to_docker_hub:
    runs-on: ubuntu-latest
    # Build Docker image and push to Docker Hub only if the app build and test is successfull
    needs: [ build_test ]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: dockerfile_game_sapper
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/game_sapper:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [ push_to_docker_hub ]

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        # TODO: add env vars as secrets on GitHub
        with:
          # VPS IP
          host: ${{ secrets.VPS_SSH_HOST }}
          # VPS username
          username: ${{ secrets.VPS_SSH_USERNAME }}
          # SSH key (copy it from your local machine)
          key: ${{ secrets.VPS_SSH_SECRET }}
          # SSH port
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            echo "Pull new image"
            docker-compose -f /home/${{ secrets.VPS_SSH_USERNAME }}/kts_winter_2023_4_xo/docker-compose.yml pull
            echo "Restart the container"
            docker-compose -f /home/${{ secrets.VPS_SSH_USERNAME }}/kts_winter_2023_4_xo/docker-compose.yml up --force-recreate --build --no-deps -d
            echo "Delete old image"
            docker image prune -f